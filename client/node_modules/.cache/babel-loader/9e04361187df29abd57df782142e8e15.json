{"ast":null,"code":"const jwt = require('jsonwebtoken');\n\nconst config = require('config');\n\nmodule.exports = function (req, res, next) {\n  //Get token from header \n  const token = req.header('x-auth-token'); //Check if not token \n\n  if (!token) {\n    return res.status(401).json({\n      msg: 'No token, authorization denied'\n    });\n  }\n\n  try {\n    const decoded = jwt.verify(token, config.get('jwtSecret'));\n    req.user = decoded.user;\n    next();\n  } catch (error) {\n    res.status(401).json({\n      msg: 'Token is not valid'\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/kevin/Documents/Web Development Projects/Contact-Keeper-/middleware/auth.js"],"names":["jwt","require","config","module","exports","req","res","next","token","header","status","json","msg","decoded","verify","get","user","error"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AACA,MAAMC,MAAM,GAAED,OAAO,CAAC,QAAD,CAArB;;AAEAE,MAAM,CAACC,OAAP,GAAiB,UAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAwB;AACvC;AACA,QAAMC,KAAK,GAAGH,GAAG,CAACI,MAAJ,CAAW,cAAX,CAAd,CAFuC,CAIvC;;AACA,MAAG,CAACD,KAAJ,EAAW;AACT,WAAOF,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,GAAG,EAAE;AAAN,KAArB,CAAP;AACH;;AAED,MAAI;AACF,UAAMC,OAAO,GAAGb,GAAG,CAACc,MAAJ,CAAWN,KAAX,EAAkBN,MAAM,CAACa,GAAP,CAAW,WAAX,CAAlB,CAAhB;AAEAV,IAAAA,GAAG,CAACW,IAAJ,GAAWH,OAAO,CAACG,IAAnB;AACAT,IAAAA,IAAI;AACH,GALH,CAKI,OAAOU,KAAP,EAAc;AAChBX,IAAAA,GAAG,CAACI,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAACC,MAAAA,GAAG,EAAE;AAAN,KAArB;AACD;AACA,CAjBD","sourcesContent":["const jwt = require('jsonwebtoken'); \r\nconst config =require('config'); \r\n\r\nmodule.exports = function(req, res, next){ \r\n  //Get token from header \r\n  const token = req.header('x-auth-token'); \r\n  \r\n  //Check if not token \r\n  if(!token) { \r\n    return res.status(401).json({msg: 'No token, authorization denied'});\r\n}\r\n\r\ntry {\r\n  const decoded = jwt.verify(token, config.get('jwtSecret')); \r\n\r\n  req.user = decoded.user;\r\n  next(); \r\n  } catch (error) {\r\n  res.status(401).json({msg: 'Token is not valid'});\r\n}\r\n}"]},"metadata":{},"sourceType":"script"}