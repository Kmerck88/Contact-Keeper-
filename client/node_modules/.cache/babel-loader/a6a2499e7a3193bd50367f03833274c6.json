{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst select_fields_1 = require(\"../select-fields\");\n\nconst base_1 = require(\"../base\");\n\nclass ContextRunnerImpl {\n  constructor(builder, selectFields = select_fields_1.selectFields) {\n    this.builder = builder;\n    this.selectFields = selectFields;\n  }\n\n  run(req, options = {}) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const context = this.builder.build();\n      const instances = this.selectFields(req, context.fields, context.locations);\n      context.addFieldInstances(instances);\n      const haltedInstances = new Set();\n\n      for (const contextItem of context.stack) {\n        const promises = context.getData({\n          requiredOnly: true\n        }).map(instance => __awaiter(this, void 0, void 0, function* () {\n          const instanceKey = `${instance.location}:${instance.path}`;\n\n          if (haltedInstances.has(instanceKey)) {\n            return;\n          }\n\n          try {\n            yield contextItem.run(context, instance.value, {\n              req,\n              location: instance.location,\n              path: instance.path\n            });\n          } catch (e) {\n            if (e instanceof base_1.ValidationHalt) {\n              haltedInstances.add(instanceKey);\n              return;\n            }\n\n            throw e;\n          }\n        }));\n        yield Promise.all(promises);\n      }\n\n      if (options.saveContext === undefined || options.saveContext) {\n        const internalReq = req;\n        internalReq[base_1.contextsKey] = (internalReq[base_1.contextsKey] || []).concat(context);\n      }\n\n      return context;\n    });\n  }\n\n}\n\nexports.ContextRunnerImpl = ContextRunnerImpl;","map":{"version":3,"sources":["C:/Users/kevin/Documents/Web Development Projects/Contact-Keeper-/node_modules/express-validator/src/chain/context-runner-impl.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","select_fields_1","require","base_1","ContextRunnerImpl","constructor","builder","selectFields","run","req","options","context","build","instances","fields","locations","addFieldInstances","haltedInstances","Set","contextItem","stack","promises","getData","requiredOnly","map","instance","instanceKey","location","path","has","ValidationHalt","add","all","saveContext","undefined","internalReq","contextsKey","concat"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst select_fields_1 = require(\"../select-fields\");\nconst base_1 = require(\"../base\");\nclass ContextRunnerImpl {\n    constructor(builder, selectFields = select_fields_1.selectFields) {\n        this.builder = builder;\n        this.selectFields = selectFields;\n    }\n    run(req, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const context = this.builder.build();\n            const instances = this.selectFields(req, context.fields, context.locations);\n            context.addFieldInstances(instances);\n            const haltedInstances = new Set();\n            for (const contextItem of context.stack) {\n                const promises = context.getData({ requiredOnly: true }).map((instance) => __awaiter(this, void 0, void 0, function* () {\n                    const instanceKey = `${instance.location}:${instance.path}`;\n                    if (haltedInstances.has(instanceKey)) {\n                        return;\n                    }\n                    try {\n                        yield contextItem.run(context, instance.value, {\n                            req,\n                            location: instance.location,\n                            path: instance.path,\n                        });\n                    }\n                    catch (e) {\n                        if (e instanceof base_1.ValidationHalt) {\n                            haltedInstances.add(instanceKey);\n                            return;\n                        }\n                        throw e;\n                    }\n                }));\n                yield Promise.all(promises);\n            }\n            if (options.saveContext === undefined || options.saveContext) {\n                const internalReq = req;\n                internalReq[base_1.contextsKey] = (internalReq[base_1.contextsKey] || []).concat(context);\n            }\n            return context;\n        });\n    }\n}\nexports.ContextRunnerImpl = ContextRunnerImpl;\n"]},"metadata":{},"sourceType":"script"}