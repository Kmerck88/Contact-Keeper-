{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst _ = require(\"lodash\");\n\nconst base_1 = require(\"./base\");\n\nfunction matchedData(req, options = {}) {\n  const internalReq = req;\n  const fieldExtractor = createFieldExtractor(options.includeOptionals !== true);\n  const validityFilter = createValidityFilter(options.onlyValidData);\n  const locationFilter = createLocationFilter(options.locations);\n  return _(internalReq[base_1.contextsKey]).flatMap(fieldExtractor).filter(validityFilter).map(field => field.instance).filter(locationFilter).reduce((state, instance) => _.set(state, instance.path, instance.value), {}).valueOf();\n}\n\nexports.matchedData = matchedData;\n\nfunction createFieldExtractor(removeOptionals) {\n  return context => {\n    const instances = context.getData({\n      requiredOnly: removeOptionals\n    });\n    return instances.map(instance => ({\n      instance,\n      context\n    }));\n  };\n}\n\nfunction createValidityFilter(onlyValidData = true) {\n  return !onlyValidData ? () => true : field => {\n    const hasError = field.context.errors.some(error => error.location === field.instance.location && error.param === field.instance.path);\n    return !hasError;\n  };\n}\n\nfunction createLocationFilter(locations = []) {\n  // No locations mean all locations\n  const allLocations = locations.length === 0;\n  return allLocations ? () => true : field => locations.includes(field.location);\n}","map":{"version":3,"sources":["C:/Users/kevin/Documents/Web Development Projects/Contact-Keeper-/node_modules/express-validator/src/matched-data.js"],"names":["Object","defineProperty","exports","value","_","require","base_1","matchedData","req","options","internalReq","fieldExtractor","createFieldExtractor","includeOptionals","validityFilter","createValidityFilter","onlyValidData","locationFilter","createLocationFilter","locations","contextsKey","flatMap","filter","map","field","instance","reduce","state","set","path","valueOf","removeOptionals","context","instances","getData","requiredOnly","hasError","errors","some","error","location","param","allLocations","length","includes"],"mappings":"AAAA;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AACA,SAASE,WAAT,CAAqBC,GAArB,EAA0BC,OAAO,GAAG,EAApC,EAAwC;AACpC,QAAMC,WAAW,GAAGF,GAApB;AACA,QAAMG,cAAc,GAAGC,oBAAoB,CAACH,OAAO,CAACI,gBAAR,KAA6B,IAA9B,CAA3C;AACA,QAAMC,cAAc,GAAGC,oBAAoB,CAACN,OAAO,CAACO,aAAT,CAA3C;AACA,QAAMC,cAAc,GAAGC,oBAAoB,CAACT,OAAO,CAACU,SAAT,CAA3C;AACA,SAAOf,CAAC,CAACM,WAAW,CAACJ,MAAM,CAACc,WAAR,CAAZ,CAAD,CACFC,OADE,CACMV,cADN,EAEFW,MAFE,CAEKR,cAFL,EAGFS,GAHE,CAGEC,KAAK,IAAIA,KAAK,CAACC,QAHjB,EAIFH,MAJE,CAIKL,cAJL,EAKFS,MALE,CAKK,CAACC,KAAD,EAAQF,QAAR,KAAqBrB,CAAC,CAACwB,GAAF,CAAMD,KAAN,EAAaF,QAAQ,CAACI,IAAtB,EAA4BJ,QAAQ,CAACtB,KAArC,CAL1B,EAKuE,EALvE,EAMF2B,OANE,EAAP;AAOH;;AACD5B,OAAO,CAACK,WAAR,GAAsBA,WAAtB;;AACA,SAASK,oBAAT,CAA8BmB,eAA9B,EAA+C;AAC3C,SAAQC,OAAD,IAAa;AAChB,UAAMC,SAAS,GAAGD,OAAO,CAACE,OAAR,CAAgB;AAAEC,MAAAA,YAAY,EAAEJ;AAAhB,KAAhB,CAAlB;AACA,WAAOE,SAAS,CAACV,GAAV,CAAeE,QAAD,KAAe;AAAEA,MAAAA,QAAF;AAAYO,MAAAA;AAAZ,KAAf,CAAd,CAAP;AACH,GAHD;AAIH;;AACD,SAASjB,oBAAT,CAA8BC,aAAa,GAAG,IAA9C,EAAoD;AAChD,SAAO,CAACA,aAAD,GACD,MAAM,IADL,GAEAQ,KAAD,IAAW;AACT,UAAMY,QAAQ,GAAGZ,KAAK,CAACQ,OAAN,CAAcK,MAAd,CAAqBC,IAArB,CAA0BC,KAAK,IAAIA,KAAK,CAACC,QAAN,KAAmBhB,KAAK,CAACC,QAAN,CAAee,QAAlC,IAA8CD,KAAK,CAACE,KAAN,KAAgBjB,KAAK,CAACC,QAAN,CAAeI,IAAhH,CAAjB;AACA,WAAO,CAACO,QAAR;AACH,GALL;AAMH;;AACD,SAASlB,oBAAT,CAA8BC,SAAS,GAAG,EAA1C,EAA8C;AAC1C;AACA,QAAMuB,YAAY,GAAGvB,SAAS,CAACwB,MAAV,KAAqB,CAA1C;AACA,SAAOD,YAAY,GAAG,MAAM,IAAT,GAAiBlB,KAAD,IAAWL,SAAS,CAACyB,QAAV,CAAmBpB,KAAK,CAACgB,QAAzB,CAA9C;AACH","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst _ = require(\"lodash\");\nconst base_1 = require(\"./base\");\nfunction matchedData(req, options = {}) {\n    const internalReq = req;\n    const fieldExtractor = createFieldExtractor(options.includeOptionals !== true);\n    const validityFilter = createValidityFilter(options.onlyValidData);\n    const locationFilter = createLocationFilter(options.locations);\n    return _(internalReq[base_1.contextsKey])\n        .flatMap(fieldExtractor)\n        .filter(validityFilter)\n        .map(field => field.instance)\n        .filter(locationFilter)\n        .reduce((state, instance) => _.set(state, instance.path, instance.value), {})\n        .valueOf();\n}\nexports.matchedData = matchedData;\nfunction createFieldExtractor(removeOptionals) {\n    return (context) => {\n        const instances = context.getData({ requiredOnly: removeOptionals });\n        return instances.map((instance) => ({ instance, context }));\n    };\n}\nfunction createValidityFilter(onlyValidData = true) {\n    return !onlyValidData\n        ? () => true\n        : (field) => {\n            const hasError = field.context.errors.some(error => error.location === field.instance.location && error.param === field.instance.path);\n            return !hasError;\n        };\n}\nfunction createLocationFilter(locations = []) {\n    // No locations mean all locations\n    const allLocations = locations.length === 0;\n    return allLocations ? () => true : (field) => locations.includes(field.location);\n}\n"]},"metadata":{},"sourceType":"script"}