{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst base_1 = require(\"../base\");\n\nclass CustomCondition {\n  constructor(condition) {\n    this.condition = condition;\n  }\n\n  run(_context, value, meta) {\n    return __awaiter(this, void 0, void 0, function* () {\n      try {\n        const result = this.condition(value, meta);\n        yield result; // if the promise resolved or the result is truthy somehow, then there's no validation halt.\n\n        if (!result) {\n          // the error thrown here is symbolic, it will be re-thrown in the catch clause anyway.\n          throw new Error();\n        }\n      } catch (e) {\n        throw new base_1.ValidationHalt();\n      }\n    });\n  }\n\n}\n\nexports.CustomCondition = CustomCondition;","map":{"version":3,"sources":["C:/Users/kevin/Documents/Web Development Projects/Contact-Keeper-/node_modules/express-validator/src/context-items/custom-condition.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","base_1","require","CustomCondition","constructor","condition","run","_context","meta","Error","ValidationHalt"],"mappings":"AAAA;;AACA,IAAIA,SAAS,GAAI,QAAQ,KAAKA,SAAd,IAA4B,UAAUC,OAAV,EAAmBC,UAAnB,EAA+BC,CAA/B,EAAkCC,SAAlC,EAA6C;AACrF,SAAO,KAAKD,CAAC,KAAKA,CAAC,GAAGE,OAAT,CAAN,EAAyB,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACvD,aAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAE,UAAI;AAAEC,QAAAA,IAAI,CAACN,SAAS,CAACO,IAAV,CAAeF,KAAf,CAAD,CAAJ;AAA8B,OAApC,CAAqC,OAAOG,CAAP,EAAU;AAAEL,QAAAA,MAAM,CAACK,CAAD,CAAN;AAAY;AAAE;;AAC3F,aAASC,QAAT,CAAkBJ,KAAlB,EAAyB;AAAE,UAAI;AAAEC,QAAAA,IAAI,CAACN,SAAS,CAAC,OAAD,CAAT,CAAmBK,KAAnB,CAAD,CAAJ;AAAkC,OAAxC,CAAyC,OAAOG,CAAP,EAAU;AAAEL,QAAAA,MAAM,CAACK,CAAD,CAAN;AAAY;AAAE;;AAC9F,aAASF,IAAT,CAAcI,MAAd,EAAsB;AAAEA,MAAAA,MAAM,CAACC,IAAP,GAAcT,OAAO,CAACQ,MAAM,CAACL,KAAR,CAArB,GAAsC,IAAIN,CAAJ,CAAM,UAAUG,OAAV,EAAmB;AAAEA,QAAAA,OAAO,CAACQ,MAAM,CAACL,KAAR,CAAP;AAAwB,OAAnD,EAAqDO,IAArD,CAA0DR,SAA1D,EAAqEK,QAArE,CAAtC;AAAuH;;AAC/IH,IAAAA,IAAI,CAAC,CAACN,SAAS,GAAGA,SAAS,CAACa,KAAV,CAAgBhB,OAAhB,EAAyBC,UAAU,IAAI,EAAvC,CAAb,EAAyDS,IAAzD,EAAD,CAAJ;AACH,GALM,CAAP;AAMH,CAPD;;AAQAO,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEX,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMY,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;AACA,MAAMC,eAAN,CAAsB;AAClBC,EAAAA,WAAW,CAACC,SAAD,EAAY;AACnB,SAAKA,SAAL,GAAiBA,SAAjB;AACH;;AACDC,EAAAA,GAAG,CAACC,QAAD,EAAWlB,KAAX,EAAkBmB,IAAlB,EAAwB;AACvB,WAAO5B,SAAS,CAAC,IAAD,EAAO,KAAK,CAAZ,EAAe,KAAK,CAApB,EAAuB,aAAa;AAChD,UAAI;AACA,cAAMc,MAAM,GAAG,KAAKW,SAAL,CAAehB,KAAf,EAAsBmB,IAAtB,CAAf;AACA,cAAMd,MAAN,CAFA,CAGA;;AACA,YAAI,CAACA,MAAL,EAAa;AACT;AACA,gBAAM,IAAIe,KAAJ,EAAN;AACH;AACJ,OARD,CASA,OAAOjB,CAAP,EAAU;AACN,cAAM,IAAIS,MAAM,CAACS,cAAX,EAAN;AACH;AACJ,KAbe,CAAhB;AAcH;;AAnBiB;;AAqBtBV,OAAO,CAACG,eAAR,GAA0BA,eAA1B","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst base_1 = require(\"../base\");\nclass CustomCondition {\n    constructor(condition) {\n        this.condition = condition;\n    }\n    run(_context, value, meta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const result = this.condition(value, meta);\n                yield result;\n                // if the promise resolved or the result is truthy somehow, then there's no validation halt.\n                if (!result) {\n                    // the error thrown here is symbolic, it will be re-thrown in the catch clause anyway.\n                    throw new Error();\n                }\n            }\n            catch (e) {\n                throw new base_1.ValidationHalt();\n            }\n        });\n    }\n}\nexports.CustomCondition = CustomCondition;\n"]},"metadata":{},"sourceType":"script"}