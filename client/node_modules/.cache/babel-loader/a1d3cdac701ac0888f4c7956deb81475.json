{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst validator = require(\"validator\");\n\nconst context_items_1 = require(\"../context-items\");\n\nclass ValidatorsImpl {\n  constructor(builder, chain) {\n    this.builder = builder;\n    this.chain = chain;\n    this.negateNext = false;\n  }\n\n  addItem(item) {\n    this.builder.addItem(item);\n    this.lastValidator = item; // Reset this.negateNext so that next validation isn't negated too\n\n    this.negateNext = false;\n    return this.chain;\n  } // validation manipulation\n\n\n  not() {\n    this.negateNext = true;\n    return this.chain;\n  }\n\n  withMessage(message) {\n    this.lastValidator.message = message;\n    return this.chain;\n  } // custom validators\n\n\n  custom(validator) {\n    return this.addItem(new context_items_1.CustomValidation(validator, this.negateNext));\n  }\n\n  exists(options = {}) {\n    let validator;\n\n    if (options.checkFalsy) {\n      validator = value => !!value;\n    } else if (options.checkNull) {\n      validator = value => value != null;\n    } else {\n      validator = value => value !== undefined;\n    }\n\n    return this.custom(validator);\n  }\n\n  isArray(options = {}) {\n    return this.custom(value => Array.isArray(value) && (typeof options.min === 'undefined' || value.length >= options.min) && (typeof options.max === 'undefined' || value.length <= options.max));\n  }\n\n  isString() {\n    return this.custom(value => typeof value === 'string');\n  }\n\n  notEmpty(options) {\n    this.not();\n    return this.isEmpty(options);\n  } // Standard validators\n\n\n  addStandardValidation(validator, ...options) {\n    return this.addItem(new context_items_1.StandardValidation(validator, this.negateNext, options));\n  }\n\n  contains(elem) {\n    return this.addStandardValidation(validator.contains, elem);\n  }\n\n  equals(comparison) {\n    return this.addStandardValidation(validator.equals, comparison);\n  }\n\n  isAfter(date) {\n    return this.addStandardValidation(validator.isAfter, date);\n  }\n\n  isAlpha(locale) {\n    return this.addStandardValidation(validator.isAlpha, locale);\n  }\n\n  isAlphanumeric(locale) {\n    return this.addStandardValidation(validator.isAlphanumeric, locale);\n  }\n\n  isAscii() {\n    return this.addStandardValidation(validator.isAscii);\n  }\n\n  isBase32() {\n    return this.addStandardValidation(validator.isBase32);\n  }\n\n  isBase64() {\n    return this.addStandardValidation(validator.isBase64);\n  }\n\n  isBefore(date) {\n    return this.addStandardValidation(validator.isBefore, date);\n  }\n\n  isBoolean() {\n    return this.addStandardValidation(validator.isBoolean);\n  }\n\n  isByteLength(options) {\n    return this.addStandardValidation(validator.isByteLength, options);\n  }\n\n  isCreditCard() {\n    return this.addStandardValidation(validator.isCreditCard);\n  }\n\n  isCurrency(options) {\n    return this.addStandardValidation(validator.isCurrency, options);\n  }\n\n  isDataURI() {\n    return this.addStandardValidation(validator.isDataURI);\n  }\n\n  isDecimal(options) {\n    return this.addStandardValidation(validator.isDecimal, options);\n  }\n\n  isDivisibleBy(number) {\n    return this.addStandardValidation(validator.isDivisibleBy, number);\n  }\n\n  isEmail(options) {\n    return this.addStandardValidation(validator.isEmail, options);\n  }\n\n  isEmpty(options) {\n    return this.addStandardValidation(validator.isEmpty, options);\n  }\n\n  isFQDN(options) {\n    return this.addStandardValidation(validator.isFQDN, options);\n  }\n\n  isFloat(options) {\n    return this.addStandardValidation(validator.isFloat, options);\n  }\n\n  isFullWidth() {\n    return this.addStandardValidation(validator.isFullWidth);\n  }\n\n  isHalfWidth() {\n    return this.addStandardValidation(validator.isHalfWidth);\n  }\n\n  isHash(algorithm) {\n    return this.addStandardValidation(validator.isHash, algorithm);\n  }\n\n  isHexColor() {\n    return this.addStandardValidation(validator.isHexColor);\n  }\n\n  isHexadecimal() {\n    return this.addStandardValidation(validator.isHexadecimal);\n  }\n\n  isIdentityCard(locale) {\n    return this.addStandardValidation(validator.isIdentityCard, locale);\n  }\n\n  isIP(version) {\n    return this.addStandardValidation(validator.isIP, version);\n  }\n\n  isIPRange() {\n    return this.addStandardValidation(validator.isIPRange);\n  }\n\n  isISBN(version) {\n    return this.addStandardValidation(validator.isISBN, version);\n  }\n\n  isISSN(options) {\n    return this.addStandardValidation(validator.isISSN, options);\n  }\n\n  isISIN() {\n    return this.addStandardValidation(validator.isISIN);\n  }\n\n  isISO8601(options) {\n    return this.addStandardValidation(validator.isISO8601, options);\n  }\n\n  isISO31661Alpha2() {\n    return this.addStandardValidation(validator.isISO31661Alpha2);\n  }\n\n  isISO31661Alpha3() {\n    return this.addStandardValidation(validator.isISO31661Alpha3);\n  }\n\n  isISRC() {\n    return this.addStandardValidation(validator.isISRC);\n  }\n\n  isIn(values) {\n    return this.addStandardValidation(validator.isIn, values);\n  }\n\n  isInt(options) {\n    return this.addStandardValidation(validator.isInt, options);\n  }\n\n  isJSON() {\n    return this.addStandardValidation(validator.isJSON);\n  }\n\n  isJWT() {\n    return this.addStandardValidation(validator.isJWT);\n  }\n\n  isLatLong() {\n    return this.addStandardValidation(validator.isLatLong);\n  }\n\n  isLength(options) {\n    return this.addStandardValidation(validator.isLength, options);\n  }\n\n  isLowercase() {\n    return this.addStandardValidation(validator.isLowercase);\n  }\n\n  isMagnetURI() {\n    return this.addStandardValidation(validator.isMagnetURI);\n  }\n\n  isMACAddress(options) {\n    return this.addStandardValidation(validator.isMACAddress, options);\n  }\n\n  isMD5() {\n    return this.addStandardValidation(validator.isMD5);\n  }\n\n  isMimeType() {\n    return this.addStandardValidation(validator.isMimeType);\n  }\n\n  isMobilePhone(locale, options) {\n    return this.addStandardValidation(validator.isMobilePhone, locale, options);\n  }\n\n  isMongoId() {\n    return this.addStandardValidation(validator.isMongoId);\n  }\n\n  isMultibyte() {\n    return this.addStandardValidation(validator.isMultibyte);\n  }\n\n  isNumeric(options) {\n    return this.addStandardValidation(validator.isNumeric, options);\n  }\n\n  isPort() {\n    return this.addStandardValidation(validator.isPort);\n  }\n\n  isPostalCode(locale) {\n    return this.addStandardValidation(validator.isPostalCode, locale);\n  }\n\n  isRFC3339() {\n    return this.addStandardValidation(validator.isRFC3339);\n  }\n\n  isSurrogatePair() {\n    return this.addStandardValidation(validator.isSurrogatePair);\n  }\n\n  isURL(options) {\n    return this.addStandardValidation(validator.isURL, options);\n  }\n\n  isUUID(version) {\n    return this.addStandardValidation(validator.isUUID, version);\n  }\n\n  isUppercase() {\n    return this.addStandardValidation(validator.isUppercase);\n  }\n\n  isVariableWidth() {\n    return this.addStandardValidation(validator.isVariableWidth);\n  }\n\n  isWhitelisted(chars) {\n    return this.addStandardValidation(validator.isWhitelisted, chars);\n  }\n\n  matches(pattern, modifiers) {\n    return this.addStandardValidation(validator.matches, pattern, modifiers);\n  }\n\n}\n\nexports.ValidatorsImpl = ValidatorsImpl;","map":{"version":3,"sources":["C:/Users/kevin/Documents/Web Development Projects/Contact-Keeper-/node_modules/express-validator/src/chain/validators-impl.js"],"names":["Object","defineProperty","exports","value","validator","require","context_items_1","ValidatorsImpl","constructor","builder","chain","negateNext","addItem","item","lastValidator","not","withMessage","message","custom","CustomValidation","exists","options","checkFalsy","checkNull","undefined","isArray","Array","min","length","max","isString","notEmpty","isEmpty","addStandardValidation","StandardValidation","contains","elem","equals","comparison","isAfter","date","isAlpha","locale","isAlphanumeric","isAscii","isBase32","isBase64","isBefore","isBoolean","isByteLength","isCreditCard","isCurrency","isDataURI","isDecimal","isDivisibleBy","number","isEmail","isFQDN","isFloat","isFullWidth","isHalfWidth","isHash","algorithm","isHexColor","isHexadecimal","isIdentityCard","isIP","version","isIPRange","isISBN","isISSN","isISIN","isISO8601","isISO31661Alpha2","isISO31661Alpha3","isISRC","isIn","values","isInt","isJSON","isJWT","isLatLong","isLength","isLowercase","isMagnetURI","isMACAddress","isMD5","isMimeType","isMobilePhone","isMongoId","isMultibyte","isNumeric","isPort","isPostalCode","isRFC3339","isSurrogatePair","isURL","isUUID","isUppercase","isVariableWidth","isWhitelisted","chars","matches","pattern","modifiers"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst validator = require(\"validator\");\nconst context_items_1 = require(\"../context-items\");\nclass ValidatorsImpl {\n    constructor(builder, chain) {\n        this.builder = builder;\n        this.chain = chain;\n        this.negateNext = false;\n    }\n    addItem(item) {\n        this.builder.addItem(item);\n        this.lastValidator = item;\n        // Reset this.negateNext so that next validation isn't negated too\n        this.negateNext = false;\n        return this.chain;\n    }\n    // validation manipulation\n    not() {\n        this.negateNext = true;\n        return this.chain;\n    }\n    withMessage(message) {\n        this.lastValidator.message = message;\n        return this.chain;\n    }\n    // custom validators\n    custom(validator) {\n        return this.addItem(new context_items_1.CustomValidation(validator, this.negateNext));\n    }\n    exists(options = {}) {\n        let validator;\n        if (options.checkFalsy) {\n            validator = value => !!value;\n        }\n        else if (options.checkNull) {\n            validator = value => value != null;\n        }\n        else {\n            validator = value => value !== undefined;\n        }\n        return this.custom(validator);\n    }\n    isArray(options = {}) {\n        return this.custom(value => Array.isArray(value) &&\n            (typeof options.min === 'undefined' || value.length >= options.min) &&\n            (typeof options.max === 'undefined' || value.length <= options.max));\n    }\n    isString() {\n        return this.custom(value => typeof value === 'string');\n    }\n    notEmpty(options) {\n        this.not();\n        return this.isEmpty(options);\n    }\n    // Standard validators\n    addStandardValidation(validator, ...options) {\n        return this.addItem(new context_items_1.StandardValidation(validator, this.negateNext, options));\n    }\n    contains(elem) {\n        return this.addStandardValidation(validator.contains, elem);\n    }\n    equals(comparison) {\n        return this.addStandardValidation(validator.equals, comparison);\n    }\n    isAfter(date) {\n        return this.addStandardValidation(validator.isAfter, date);\n    }\n    isAlpha(locale) {\n        return this.addStandardValidation(validator.isAlpha, locale);\n    }\n    isAlphanumeric(locale) {\n        return this.addStandardValidation(validator.isAlphanumeric, locale);\n    }\n    isAscii() {\n        return this.addStandardValidation(validator.isAscii);\n    }\n    isBase32() {\n        return this.addStandardValidation(validator.isBase32);\n    }\n    isBase64() {\n        return this.addStandardValidation(validator.isBase64);\n    }\n    isBefore(date) {\n        return this.addStandardValidation(validator.isBefore, date);\n    }\n    isBoolean() {\n        return this.addStandardValidation(validator.isBoolean);\n    }\n    isByteLength(options) {\n        return this.addStandardValidation(validator.isByteLength, options);\n    }\n    isCreditCard() {\n        return this.addStandardValidation(validator.isCreditCard);\n    }\n    isCurrency(options) {\n        return this.addStandardValidation(validator.isCurrency, options);\n    }\n    isDataURI() {\n        return this.addStandardValidation(validator.isDataURI);\n    }\n    isDecimal(options) {\n        return this.addStandardValidation(validator.isDecimal, options);\n    }\n    isDivisibleBy(number) {\n        return this.addStandardValidation(validator.isDivisibleBy, number);\n    }\n    isEmail(options) {\n        return this.addStandardValidation(validator.isEmail, options);\n    }\n    isEmpty(options) {\n        return this.addStandardValidation(validator.isEmpty, options);\n    }\n    isFQDN(options) {\n        return this.addStandardValidation(validator.isFQDN, options);\n    }\n    isFloat(options) {\n        return this.addStandardValidation(validator.isFloat, options);\n    }\n    isFullWidth() {\n        return this.addStandardValidation(validator.isFullWidth);\n    }\n    isHalfWidth() {\n        return this.addStandardValidation(validator.isHalfWidth);\n    }\n    isHash(algorithm) {\n        return this.addStandardValidation(validator.isHash, algorithm);\n    }\n    isHexColor() {\n        return this.addStandardValidation(validator.isHexColor);\n    }\n    isHexadecimal() {\n        return this.addStandardValidation(validator.isHexadecimal);\n    }\n    isIdentityCard(locale) {\n        return this.addStandardValidation(validator.isIdentityCard, locale);\n    }\n    isIP(version) {\n        return this.addStandardValidation(validator.isIP, version);\n    }\n    isIPRange() {\n        return this.addStandardValidation(validator.isIPRange);\n    }\n    isISBN(version) {\n        return this.addStandardValidation(validator.isISBN, version);\n    }\n    isISSN(options) {\n        return this.addStandardValidation(validator.isISSN, options);\n    }\n    isISIN() {\n        return this.addStandardValidation(validator.isISIN);\n    }\n    isISO8601(options) {\n        return this.addStandardValidation(validator.isISO8601, options);\n    }\n    isISO31661Alpha2() {\n        return this.addStandardValidation(validator.isISO31661Alpha2);\n    }\n    isISO31661Alpha3() {\n        return this.addStandardValidation(validator.isISO31661Alpha3);\n    }\n    isISRC() {\n        return this.addStandardValidation(validator.isISRC);\n    }\n    isIn(values) {\n        return this.addStandardValidation(validator.isIn, values);\n    }\n    isInt(options) {\n        return this.addStandardValidation(validator.isInt, options);\n    }\n    isJSON() {\n        return this.addStandardValidation(validator.isJSON);\n    }\n    isJWT() {\n        return this.addStandardValidation(validator.isJWT);\n    }\n    isLatLong() {\n        return this.addStandardValidation(validator.isLatLong);\n    }\n    isLength(options) {\n        return this.addStandardValidation(validator.isLength, options);\n    }\n    isLowercase() {\n        return this.addStandardValidation(validator.isLowercase);\n    }\n    isMagnetURI() {\n        return this.addStandardValidation(validator.isMagnetURI);\n    }\n    isMACAddress(options) {\n        return this.addStandardValidation(validator.isMACAddress, options);\n    }\n    isMD5() {\n        return this.addStandardValidation(validator.isMD5);\n    }\n    isMimeType() {\n        return this.addStandardValidation(validator.isMimeType);\n    }\n    isMobilePhone(locale, options) {\n        return this.addStandardValidation(validator.isMobilePhone, locale, options);\n    }\n    isMongoId() {\n        return this.addStandardValidation(validator.isMongoId);\n    }\n    isMultibyte() {\n        return this.addStandardValidation(validator.isMultibyte);\n    }\n    isNumeric(options) {\n        return this.addStandardValidation(validator.isNumeric, options);\n    }\n    isPort() {\n        return this.addStandardValidation(validator.isPort);\n    }\n    isPostalCode(locale) {\n        return this.addStandardValidation(validator.isPostalCode, locale);\n    }\n    isRFC3339() {\n        return this.addStandardValidation(validator.isRFC3339);\n    }\n    isSurrogatePair() {\n        return this.addStandardValidation(validator.isSurrogatePair);\n    }\n    isURL(options) {\n        return this.addStandardValidation(validator.isURL, options);\n    }\n    isUUID(version) {\n        return this.addStandardValidation(validator.isUUID, version);\n    }\n    isUppercase() {\n        return this.addStandardValidation(validator.isUppercase);\n    }\n    isVariableWidth() {\n        return this.addStandardValidation(validator.isVariableWidth);\n    }\n    isWhitelisted(chars) {\n        return this.addStandardValidation(validator.isWhitelisted, chars);\n    }\n    matches(pattern, modifiers) {\n        return this.addStandardValidation(validator.matches, pattern, modifiers);\n    }\n}\nexports.ValidatorsImpl = ValidatorsImpl;\n"]},"metadata":{},"sourceType":"script"}