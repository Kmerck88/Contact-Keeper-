<<<<<<< HEAD
import _classCallCheck from "@babel/runtime/helpers/classCallCheck";
import _createClass from "@babel/runtime/helpers/createClass";
import _possibleConstructorReturn from "@babel/runtime/helpers/possibleConstructorReturn";
import _getPrototypeOf from "@babel/runtime/helpers/getPrototypeOf";
import _inherits from "@babel/runtime/helpers/inherits";
import { Type } from '../constants';
import Node from './Node';
import Range from './Range';

var Comment = /*#__PURE__*/function (_Node) {
  _inherits(Comment, _Node);

  function Comment() {
    _classCallCheck(this, Comment);

    return _possibleConstructorReturn(this, _getPrototypeOf(Comment).call(this, Type.COMMENT));
=======
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));

var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _constants = require("../constants");

var _Node2 = _interopRequireDefault(require("./Node"));

var _Range = _interopRequireDefault(require("./Range"));

var Comment =
/*#__PURE__*/
function (_Node) {
  (0, _inherits2.default)(Comment, _Node);

  function Comment() {
    (0, _classCallCheck2.default)(this, Comment);
    return (0, _possibleConstructorReturn2.default)(this, (0, _getPrototypeOf2.default)(Comment).call(this, _constants.Type.COMMENT));
>>>>>>> 087c3e111e0f389a3f9a8381d37edf4f644326b0
  }
  /**
   * Parses a comment line from the source
   *
   * @param {ParseContext} context
   * @param {number} start - Index of first character
   * @returns {number} - Index of the character after this scalar
   */


<<<<<<< HEAD
  _createClass(Comment, [{
=======
  (0, _createClass2.default)(Comment, [{
>>>>>>> 087c3e111e0f389a3f9a8381d37edf4f644326b0
    key: "parse",
    value: function parse(context, start) {
      this.context = context;
      var offset = this.parseComment(start);
<<<<<<< HEAD
      this.range = new Range(start, offset);
      return offset;
    }
  }]);

  return Comment;
}(Node);

export { Comment as default };
=======
      this.range = new _Range.default(start, offset);
      return offset;
    }
  }]);
  return Comment;
}(_Node2.default);

exports.default = Comment;
>>>>>>> 087c3e111e0f389a3f9a8381d37edf4f644326b0
